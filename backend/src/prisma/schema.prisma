generator client {
    provider = "prisma-client-js"
    output   = "../../../node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_URL")
}

model Project {
    id        Int        @id @default(autoincrement())
    name      String     @unique(map: "projects_name_unique") @db.VarChar(255)
    createdAt DateTime   @default(now()) @db.Timestamptz(6)
    resources Resource[]
    Metric    Metric[]
}

enum ResourceType {
    Cassandra
    Postgres
    Sage
}

model Resource {
    id          Int          @id @default(autoincrement())
    name        String       @db.VarChar(40)
    description String       @db.VarChar(255)
    projectId   Int
    type        ResourceType
    credentials String       @db.VarChar()
    createdAt   DateTime     @default(now()) @db.Timestamptz(6)
    project     Project      @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "resources_project_id_foreign")
    Metric      Metric[]

    @@index([projectId], map: "resources_project_id_index")
}

enum MetricType {
    Number
    Object
}

model Metric {
    id          Int        @id @default(autoincrement())
    name        String     @db.VarChar(40)
    description String     @db.VarChar(255)
    cron        String?    @db.VarChar(255)
    projectId   Int
    resourceId  Int
    type        MetricType
    query       String     @db.VarChar()
    createdAt   DateTime   @default(now()) @db.Timestamptz(6)
    project     Project    @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "metrics_project_id_foreign")
    resource    Resource   @relation(fields: [resourceId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "metrics_resource_id_foreign")

    @@index([projectId], map: "metrics_project_id_index")
    @@index([resourceId], map: "metrics_resource_id_index")
}
